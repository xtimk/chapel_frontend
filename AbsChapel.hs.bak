-- Haskell data types for the abstract syntax.
-- Generated by the BNF converter.

module AbsChapel where

newtype POpenGraph = POpenGraph ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PCloseGraph = PCloseGraph ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype POpenParenthesis = POpenParenthesis ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PCloseParenthesis = PCloseParenthesis ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PSemicolon = PSemicolon ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PColon = PColon ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype Pdo = Pdo ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PWhile = PWhile ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PInt = PInt ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PAssignmEq = PAssignmEq ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PAssignmPlus = PAssignmPlus ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PRef = PRef ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PVar = PVar ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PConst = PConst ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PElthen = PElthen ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEgrthen = PEgrthen ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEplus = PEplus ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEminus = PEminus ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEtimes = PEtimes ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEdiv = PEdiv ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEmod = PEmod ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PDef = PDef ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PElor = PElor ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEland = PEland ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEeq = PEeq ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEneq = PEneq ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEle = PEle ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PEge = PEge ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PIdent = PIdent ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PString = PString ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PChar = PChar ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PDouble = PDouble ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

newtype PInteger = PInteger ((Int,Int),String)
  deriving (Eq, Ord, Show, Read)

data Program = Progr Module
  deriving (Eq, Ord, Show, Read)

data Module = Mod [Ext]
  deriving (Eq, Ord, Show, Read)

data Ext = ExtDecl Declaration | ExtFun Function
  deriving (Eq, Ord, Show, Read)

data Declaration = Decl DecMode [DeclList] PSemicolon
  deriving (Eq, Ord, Show, Read)

data DeclList
    = NoAssgmDec [PIdent] PColon Type
    | AssgmDec [PIdent] PAssignmEq Exp
    | AssgmTypeDec [PIdent] PColon Type PAssignmEq Exp
  deriving (Eq, Ord, Show, Read)

data DecMode = PVarMode PVar | PConstMode PConst
  deriving (Eq, Ord, Show, Read)

data Function = FunDec Signature Body
  deriving (Eq, Ord, Show, Read)

data Signature = Sign Type PIdent FunctionParams
  deriving (Eq, Ord, Show, Read)

data FunctionParams
    = FunParams POpenParenthesis [Param] PCloseParenthesis
  deriving (Eq, Ord, Show, Read)

data Param = ParNoMode Type PIdent | ParWMode Mode Type PIdent
  deriving (Eq, Ord, Show, Read)

data Body = FunBlock POpenGraph [BodyStatement] PCloseGraph
  deriving (Eq, Ord, Show, Read)

data BodyStatement
    = Stm Statement
    | Fun Function PSemicolon
    | DeclStm Declaration
    | Block Body
  deriving (Eq, Ord, Show, Read)

data Statement
    = DoWhile Pdo PWhile Body Guard | StExp Exp PSemicolon
  deriving (Eq, Ord, Show, Read)

data Guard = SGuard POpenParenthesis Exp PCloseParenthesis
  deriving (Eq, Ord, Show, Read)

data Type = Tint PInt
  deriving (Eq, Ord, Show, Read)

data AssgnmOp = AssgnEq PAssignmEq | AssgnPlEq PAssignmPlus
  deriving (Eq, Ord, Show, Read)

data Mode = RefMode PRef
  deriving (Eq, Ord, Show, Read)

data Exp
    = EAss Exp AssgnmOp Exp
    | Elor Exp PElor Exp
    | Eland Exp PEland Exp
    | Ebitand Exp PDef Exp
    | Eeq Exp PEeq Exp
    | Eneq Exp PEneq Exp
    | Elthen Exp PElthen Exp
    | Egrthen Exp PEgrthen Exp
    | Ele Exp PEle Exp
    | Ege Exp PEge Exp
    | Eplus Exp PEplus Exp
    | Eminus Exp PEminus Exp
    | Etimes Exp PEtimes Exp
    | Ediv Exp PEdiv Exp
    | Emod Exp PEmod Exp
    | InnerExp POpenParenthesis Exp PCloseParenthesis
    | Evar PIdent
    | Econst Constant
    | Estring PString
  deriving (Eq, Ord, Show, Read)

data Constant = Efloat PDouble | Echar PChar | Eint PInteger
  deriving (Eq, Ord, Show, Read)

